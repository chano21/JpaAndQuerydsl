  
version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - kafkanet

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafkanet
      
  debezium:
    image: debezium/connect:1.4
    depends_on:
      - sampledb1
      - sampledb2
      - kafka
      - zookeeper
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      
    networks:
      - kafkanet
  sampledb1:
    image: mysql:5.7
    restart: always
    command: --lower_case_table_names=1
    container_name: sampledb1
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=sampledb1
      - MYSQL_ROOT_PASSWORD=1234
      - TZ=Asia/Seoul
    networks:
      - kafkanet

  sampledb2:
    image: mysql:5.7
    restart: always
    command: --lower_case_table_names=1
    container_name: sampledb2
    ports:
      - "3308:3306"
    environment:
      - MYSQL_DATABASE=sampledb2
      - MYSQL_ROOT_PASSWORD=1234
      - TZ=Asia/Seoul
    networks:
      - kafkanet
      
networks:
   kafkanet:
    